package org.firstinspires.ftc.teamcode.MechamTest;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;

@TeleOp(name = "INTAKE BUT BETTER")
public class IntakeKez extends LinearOpMode {
    private DcMotor intakeMotor = null;
    private DcMotor intakeMotor2 = null;
    private static final int INTAKE_MAX = 1750;                                                       ;
    private static final int INTAKE_MIN = 0;
    private static final double intakeMotorPower = .8;

    @Override
    public void runOpMode() throws InterruptedException {
        intakeMotor = hardwareMap.get(DcMotor.class, "barm");
        intakeMotor.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        intakeMotor.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER); // Change to RUN_WITHOUT_ENCODER
        intakeMotor2 = hardwareMap.get(DcMotor.class, "parm");
        intakeMotor2.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        intakeMotor2.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER); // Change to RUN_WITHOUT_ENCODER

        intakeMotor2.setDirection(DcMotorSimple.Direction.REVERSE);

        waitForStart();

        while (opModeIsActive()) {
            // Control for intake motor using triggers
            if (gamepad2.right_trigger > 0 && intakeMotor.getCurrentPosition() < INTAKE_MAX) {
                intakeMotor.setPower(intakeMotorPower * gamepad2.right_trigger);
            } else if (gamepad2.left_trigger > 0 && intakeMotor.getCurrentPosition() > INTAKE_MIN) {
                intakeMotor.setPower(-intakeMotorPower * gamepad2.left_trigger);
            } else {
                intakeMotor.setPower(0);
            }

            // Immediate retraction to home position with B button
            if (gamepad2.b) {
                intakeMotor.setTargetPosition(INTAKE_MIN);
                intakeMotor.setMode(DcMotor.RunMode.RUN_TO_POSITION);
                intakeMotor.setPower(1.0); // Full power to quickly retract
            }
            if (gamepad2.right_trigger > 0 && intakeMotor2.getCurrentPosition() < INTAKE_MAX) {
                intakeMotor2.setPower(intakeMotorPower * gamepad2.right_trigger);
            } else if (gamepad2.left_trigger > 0 && intakeMotor2.getCurrentPosition() > INTAKE_MIN) {
                intakeMotor2.setPower(-intakeMotorPower * gamepad2.left_trigger);
            } else {
                intakeMotor2.setPower(0);
            }

            // Immediate retraction to home position with B button
            if (gamepad2.b) {
                intakeMotor.setTargetPosition(INTAKE_MIN);
                intakeMotor.setMode(DcMotor.RunMode.RUN_TO_POSITION);
                intakeMotor.setPower(1.0); // Full power to quickly retract
            }

            // Telemetry data for the intake motor
            telemetry.addData("Intake Motor Position", intakeMotor.getCurrentPosition());
            telemetry.addData("Intake 2 Motor Position", intakeMotor2.getCurrentPosition());
            telemetry.update();
        }
    }
}
